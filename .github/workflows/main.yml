name: kirbyjs
on:
  push:
    branches:
      - master
jobs:
  create_infra:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:0.12.18
    steps:
      - uses: actions/checkout@v1
      - name: create_infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ./tf
          terraform init
          terraform validate
          terraform apply -auto-approve

  build_and_deploy:
    needs: create_infra
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: get_node_js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: npm_build
        run: |
          npm ci
          npm run build
        env:
          CI: true
      - name: add_aws_cli
        uses: docker://infrastructureascode/aws-cli
      - name: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ./assets/bundle s3://kirbyjs.com/ --recursive --cache-control max-age=31536000
          aws s3 cp ./assets/bundle/index.html s3://kirbyjs.com/ --cache-control max-age=0
          aws s3 cp ./assets/bundle/fcc/index.html s3://kirbyjs.com/fcc/ --cache-control max-age=0
          aws s3 cp ./assets/bundle/fcc/tribute/index.html s3://kirbyjs.com/fcc/tribute/ --cache-control max-age=0
          aws s3 cp ./assets/bundle/fcc/survey-form/index.html s3://kirbyjs.com/fcc/survey-form/ --cache-control max-age=0

  cleanup:
    needs: build_and_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: setup_python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: install_dependencies
        run: pip install boto3
      - name: cleanup_s3_bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: python ./scripts/cleanup_s3_bucket.py
